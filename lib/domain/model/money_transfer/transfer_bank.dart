class TransferBank {
  TransferBank({
    required this.alloDate,
    required this.refNo,
    required this.toSubAccoNo,
    required this.subAccoNo,
    required this.currCd,
    required this.custFamilyName,
    required this.custGivenName,
    required this.subAccoName,
    required this.delCd,
    required this.subAccoCd,
    required this.bankCd,
    required this.bankBranchName,
    required this.bankBranchNameDisp,
    required this.bankBranchLocationCd,
    required this.bankAccntnumber,
    required this.bankAccntName,
    required this.amount,
    required this.feePayFlag,
    required this.feeRate,
    required this.feeMin,
    required this.feeAmount,
    required this.feeType,
    required this.smsFee,
    required this.remarks,
    required this.transactionCd,
    required this.branchSName,
    required this.province,
    required this.status,
    required this.timeStamp,
    required this.transferFlg,
    required this.srcChannel,
    required this.approvedDateTime,
    required this.approvedUserId,
    required this.regDateTime,
    required this.regUserId,
    required this.updDateTime,
    required this.updUserId,
    required this.branchCd,
    required this.groupCd,
    required this.approvementFlag,
    required this.smsService,
    required this.mFromDate,
    required this.mToDate,
  });

  factory TransferBank.fromMap(Map<String?, dynamic> map) {
    return TransferBank(
      alloDate: map['alloDate'],
      refNo: map['refNo'],
      toSubAccoNo: map['toSubAccoNo'],
      subAccoNo: map['subAccoNo'],
      currCd: map['currCd'],
      custFamilyName: map['custFamilyName'],
      custGivenName: map['custGivenName'],
      subAccoName: map['subAccoName'],
      delCd: map['delCd'],
      subAccoCd: map['subAccoCd'],
      bankCd: map['bankCd'],
      bankBranchName: map['bankBranchName'],
      bankBranchNameDisp: map['bankBranchNameDisp'],
      bankBranchLocationCd: map['bankBranchLocationCd'],
      bankAccntnumber: map['bankAccntnumber'],
      bankAccntName: map['bankAccntName'],
      amount: map['amount'],
      feePayFlag: map['feePayFlag'],
      feeRate: map['feeRate'],
      feeMin: map['feeMin'],
      feeAmount: map['feeAmount'],
      feeType: map['feeType'],
      smsFee: map['smsFee'],
      remarks: map['remarks'],
      transactionCd: map['transactionCd'],
      branchSName: map['branchSName'],
      province: map['province'],
      status: map['status'],
      timeStamp: map['timeStamp'],
      transferFlg: map['transferFlg'],
      srcChannel: map['srcChannel'],
      approvedDateTime: map['approvedDateTime'],
      approvedUserId: map['approvedUserId'],
      regDateTime: map['regDateTime'],
      regUserId: map['regUserId'],
      updDateTime: map['updDateTime'],
      updUserId: map['updUserId'],
      branchCd: map['branchCd'],
      groupCd: map['groupCd'],
      approvementFlag: map['approvementFlag'],
      smsService: map['smsService'],
      mFromDate: map['mFromDate'],
      mToDate: map['mToDate'],
    );
  }

  num? alloDate;
  num? refNo;
  String? toSubAccoNo;
  String? subAccoNo;
  String? currCd;
  String? custFamilyName;
  String? custGivenName;
  String? subAccoName;
  num? delCd;
  num? subAccoCd;
  String? bankCd;
  String? bankBranchName;
  String? bankBranchNameDisp;
  num? bankBranchLocationCd;
  String? bankAccntnumber;
  String? bankAccntName;
  num? amount;
  num? feePayFlag;
  num? feeRate;
  num? feeMin;
  num? feeAmount;
  num? feeType;
  num? smsFee;
  String? remarks;
  String? transactionCd;
  String? branchSName;
  String? province;
  num? status;
  String? timeStamp;
  num? transferFlg;
  num? srcChannel;
  num? approvedDateTime;
  String? approvedUserId;
  num? regDateTime;
  String? regUserId;
  num? updDateTime;
  String? updUserId;
  num? branchCd;
  String? groupCd;
  num? approvementFlag;
  num? smsService;
  num? mFromDate;
  num? mToDate;
}
